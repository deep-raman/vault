---

- name: Install required packages
  yum:
    name: wget
    state: present
    update_cache: yes

- name: Install required packages
  yum:
    name: unzip
    state: present
    update_cache: yes

- name: Create vault home
  file:
    path: "{{ vault_home_path }}"
    state: directory

- name: Create directories under vault home
  file:
    path: "{{ vault_home_path }}/{{ item }}"
    state: directory
  with_items:
    - bin
    - conf
    - data
    - logs

- name: Create vault user group
  group:
    name: "{{ vault_group }}"
    state: present

- name: Create vault user
  user:
    name: "{{ vault_user }}"
    group: "{{ vault_group }}"
    home: "{{ vault_home_path }}"
    shell: /bin/false
    state: present

- name: Download vault
  get_url:
    url: "{{ download_url }}"
    dest: /tmp/

- name: Uncompress vault downloaded file
  unarchive: 
    src: "/tmp/{{ vault_zipped_file }}"
    dest: "{{ vault_home_path }}/bin/"
    remote_src: yes  

- name: Set permissions
  file:
    path: "{{ vault_home_path }}"
    state: directory
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: 0755
    recurse: yes

- name: Upload vault config file
  template:
    src: config.json.j2
    dest: "{{ vault_home_path }}/conf/config.json"
    backup: yes

- name: Upload vault service file
  template:
    src: vault.service.j2
    dest: /etc/systemd/system/vault.service
    backup: yes

- name: Reload systemd daemon
  systemd:
    daemon_reload: yes

- name: Start and enable vault service
  systemd:
    name: vault
    state: started
    enabled: yes

- name: Export vault binary path
  shell: "{{ item }}"
  with_items:
    - "export PATH=$PATH:{{ vault_home_path }}/bin"
    - "echo \"export PATH=$PATH:{{ vault_home_path }}/bin\" >> /root/.bashrc"
    - "export VAULT_ADDRESS=http://{{ vault_api_addr }}:{{ vault_port }}"
    - "echo \"export VAULT_ADDR=http://{{ vault_api_addr }}:{{ vault_port }}\" >> /root/.bashrc"

- name: Initiate vault
  command: vault operator init
  register: vault_init
  
- debug:
    var: vault_init.stdout_lines
 
